1. OLAP operations
  a. Dimensions Tables and Fact table
  b. Roll-up
  c. Roll-down
  d. Slice
  e. Dice


3. Apriori algorithm
data = {
    'Transaction 1': ['milk', 'bread', 'butter', None],
    'Transaction 2': ['bread', 'butter', None, None],
    'Transaction 3': ['milk', 'bread', None, None],
    'Transaction 4': ['milk', 'butter', None, None],
    'Transaction 5': ['bread', 'butter', 'jam', None],
}

4. FP growth algorithm
dataset = {
    frozenset(['milk', 'bread']): 3,
    frozenset(['bread', 'butter', 'jam']): 2,
    frozenset(['milk', 'bread', 'butter', 'jam']): 2,
    frozenset(['milk', 'butter', 'jam']): 1,
}

5.  Na√Øve Bayes classifier algorithm
  Code has 2 examples:
  a. playtennis 
     data = {
    'outlook': ['sunny', 'sunny', 'overcast', 'rain', 'rain', 'rain', 'overcast', 'sunny', 'sunny', 'rain', 'sunny', 'overcast', 'overcast'],
    'temperature': ['hot', 'hot', 'hot', 'mild', 'mild', 'cool', 'cool', 'mild', 'cool', 'mild', 'mild', 'mild', 'cool'],
    'humidity': ['high', 'high', 'normal', 'normal', 'high', 'normal', 'normal', 'high', 'normal', 'normal', 'normal', 'high', 'normal'],
    'windy': ['false', 'true', 'false', 'false', 'false', 'true', 'true', 'false', 'true', 'true', 'true', 'false', 'true'],
    'playtennis': ['no', 'no', 'yes', 'yes', 'no', 'yes', 'yes', 'no', 'yes', 'yes', 'yes', 'yes', 'no']
    }
  b. Defaulted Borrower
      data = {
    'Home Owner': ['Yes', 'No', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'No'],
    'Marital Status': ['Single', 'Married', 'Single', 'Married', 'Divorced', 'Married', 'Divorced', 'Divorced', 'Single', 'Single'],
    'Annual Income': [125, 100, 70, 120, 95, 60, 220, 85, 75, 90],
    'Defaulted Borrower': ['No', 'No', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'Yes', 'Yes']
    }

6. Decision tree classifier
data = {
    'age': [22, 35, 26, 27, 32],
    'income': ['high', 'medium', 'low', 'medium', 'high'],
    'student': ['no', 'yes', 'yes', 'no', 'yes'],
    'credit_rating': ['fair', 'excellent', 'fair', 'excellent', 'fair'],
    'buys_computer': ['no', 'yes', 'yes', 'no', 'yes']
}

7. K-means clustering algorithm
Random 500 sample points generated by using following code
X,y = make_blobs(n_samples = 500,n_features = 2,centers = 3,random_state = 23)
# For ploting points
fig = plt.figure(0)
plt.grid(True)
plt.scatter(X[:,0],X[:,1])
plt.show()

